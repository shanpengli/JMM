% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jmspline.R
\name{jmspline}
\alias{jmspline}
\title{Joint Modelling for Continuous outcomes}
\usage{
jmspline(
  ydata,
  cdata,
  mdata,
  sigmau_inv,
  tbtheta,
  tL,
  tU,
  nbreak,
  p01,
  p02,
  j_max,
  k_max = 2,
  quadpoint = 10,
  maxiter = 2500,
  do.trace = FALSE,
  beta0init = NULL,
  beta1init = NULL,
  sigmainit = NULL,
  thetainit = NULL,
  sigmadinit = NULL,
  gammainit = NULL,
  survVar = TRUE,
  conversigmad = FALSE
)
}
\arguments{
\item{ydata}{a multibiomarker longitudinal data frame in long format.}

\item{cdata}{a survival data frame with single failure.
Each subject has one data entry.}

\item{mdata}{a data vector of number of repeated measurements.}

\item{sigmau_inv}{sigmau_inv.}

\item{tbtheta}{a data frame of the normalizing constant for spline basis.}

\item{tL}{the lower limit of time interval for spline basis.}

\item{tU}{the upper limit of time interval for spline basis.}

\item{nbreak}{number of knots to be specified.}

\item{p01}{number of covariates in the first biomarker.}

\item{p02}{number of covariates in the second biomarker.}

\item{j_max}{Total number of biomarkers in the longitudinal data.}

\item{k_max}{Number of random effects to be specified. Default is 2.}

\item{quadpoint}{Number of quadrature points.}

\item{maxiter}{The maximum number of iterations for EM process.}

\item{do.trace}{A logic value to control the iterated results to be printed. Default is FALSE.}

\item{beta0init}{Initial values of beta0.}

\item{beta1init}{Initial values of beta1.}

\item{sigmainit}{Initial values of sigma^2.}

\item{thetainit}{Initial values of theta.}

\item{sigmadinit}{Initial values of sigmad.}

\item{gammainit}{Initial values of gamma.}

\item{survVar}{logical; TRUE if the survival sub-model include covariates. Default is TRUE.}

\item{conversigmad}{logical; TRUE if sigmad is considered into convergence criteria. Default is FALSE.}
}
\description{
Joint modeling of longitudinal continuous and survival data
}
\examples{

require(JMM)
## load supporting data for data generation and model fit 
data(simdata)
tbeta0 <- as.data.frame(matrix(c(-0.4, -0.3), nrow = 2))
tbeta1 <- as.data.frame(c(1, 0.8))
tsigma <- as.data.frame(c(1, 1))
tsigmad <- as.data.frame(c(2, 1))
ttheta <- as.data.frame(c(5, 0.148183, -1.606910, 1.083067, -1.788186, -1.205329,
                          0.245283, -1.433481, -0.603650, -0.134991))
teta <- as.data.frame(c(0))
tgamma <- 0.5
tL <- 0
tU <- 9
## generate a simulated data
Data <- SimData(sim = 1, n = 215, tL = tL, tU = tU, nbreak = 8, p01 = 1, p02 = 1,
q_eta = 1, t_max = 19, k_max = 2, distr = "Gaussian", m_age = 0,
std_age = 2, sigmau_inv = sigmau_inv, tbtheta = tbtheta, 
tbeta0 = tbeta0, tbeta1 = tbeta1, tsigma = tsigma, tsigmad = tsigmad,
ttheta = ttheta, teta = teta, tgamma = tgamma)
ydata <- as.data.frame(Data$ydata_0)
cdata <- as.data.frame(Data$cdata_0)
mdata <- as.data.frame(Data$mdata_0)
\donttest{
## fit a joint model
fit <- jmspline(ydata = ydata, cdata = cdata, mdata = mdata, sigmau_inv = sigmau_inv, 
                tbtheta = btheta, tL = tL, tU = tU, nbreak = 8, p01 = 1, p02 = 1, 
                j_max = 2, beta0init = tbeta0, beta1init = tbeta1, sigmainit = tsigma,
                thetainit = ttheta, sigmadinit = tsigmad, gammainit = tgamma,
                survVar = FALSE, conversigmad = TRUE)
}
}
\seealso{
\code{\link{SimData}}
}
